.display {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 4px;
    isolation: isolate;
}

.cell {
    width: 4rem;
    font-size: calc(0.5vw + 1em);
    aspect-ratio: 1;
    border: 1px solid #000;

    display: flex;
    justify-content: center;
    align-items: center;

    transition: all 200ms ease;
}

/* Animations */

@keyframes swapLeft {
    to {
        translate: calc(-100% - 4px) 0;
    }
}
.swapLeft {
    animation: swapLeft 500ms ease-in-out 0ms 1 normal forwards;
}

@keyframes swapRight {
    to {
        translate: calc(100% + 4px) 0;
    }
}
.swapRight {
    animation: swapRight 500ms ease-in-out 0ms 1 normal forwards;
}

@keyframes swapLeftInverse {
    from {
        translate: calc(100% + 4px) 0;
    }
}

@keyframes swapRightInverse {
    from {
        translate: calc(-100% - 4px) 0;
    }
}

@keyframes fadeOut {
    to {
        opacity: 0;
    }
}
.fadeOut {
    animation: fadeOut 500ms ease-in-out 0ms 1 normal forwards;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
.fadeIn {
    animation: fadeIn 500ms ease-in-out 0ms 1 normal forwards;
}

/* Combinations */
.swapLeftFadeOut {
    animation: fadeOut 500ms ease-in-out 0ms 1 normal forwards,
        swapLeft 500ms ease-in-out 0ms 1 normal forwards;
}

.swapLeftFadeIn {
    animation: fadeIn 500ms ease-in-out 0ms 1 normal forwards,
        swapRightInverse 500ms ease-in-out 0ms 1 normal forwards;
}

.swapRightFadeOut {
    animation: fadeOut 500ms ease-in-out 0ms 1 normal forwards,
        swapRight 500ms ease-in-out 0ms 1 normal forwards;
}

.swapRightFadeIn {
    animation: fadeIn 500ms ease-in-out 0ms 1 normal forwards,
        swapLeftInverse 500ms ease-in-out 0ms 1 normal forwards;
}

/* Special states */

:where(.index, .nonSwap, .swapGreater, .swapSmaller) {
    border-color: gray;
    z-index: 10;
}

.index {
    outline: 2px solid violet;
}

.highlight {
    outline: 2px solid steelblue;
}

.nonSwap {
    outline: 2px solid yellow;
    background-color: lightyellow;
}

.greater {
    outline: 2px solid green;
    background-color: lightgreen;
}

.smaller {
    outline: 2px solid red;
    background-color: lightcoral;
}

.sorted {
    border-color: yellowgreen;
    background-color: lightgreen;
}

/* Borders */

.borderStart {
    border-left-color: greenyellow;
    border-left-width: 2px;
}

.borderEnd {
    border-right-color: red;
    border-right-width: 2px;
}
