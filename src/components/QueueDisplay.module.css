.display {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5em;
    isolation: isolate;
    font-size: calc(0.5vw + 1em);
    max-width: 80rem;
    margin: auto;
}

.node {
    border-radius: 100%;
    width: 4em;
    aspect-ratio: 1;
    border: 1px solid #000;

    display: flex;
    justify-content: center;
    align-items: center;

    transition: all 200ms ease;
}

.nodeContainer {
    display: inherit;
    justify-content: inherit;
    align-items: inherit;
    gap: inherit;
}

/* Animations */

@keyframes dequeue {
    to {
        opacity: 0;
        translate: -100% 0;
    }
}

@keyframes enqueue {
    from {
        opacity: 0;
        translate: 100% 0;
    }
}

/* Pointers styles */

.enqueue {
    border-color: yellowgreen;
    background-color: lightgreen;
    animation: enqueue 500ms ease-in 0ms 1 normal forwards;
}

.dequeue {
    border-color: red;
    background-color: lightcoral;
    animation: dequeue 500ms ease-out 0ms 1 normal forwards;
}

.dequeue + .arrow {
    animation: dequeue 500ms ease-out 0ms 1 normal forwards;
}

@supports selector(:has(*)) {
    .nodeContainer:has(+ .nodeContainer > .enqueue) .arrow {
        animation: enqueue 500ms ease-in 0ms 1 normal forwards;
    }
}
